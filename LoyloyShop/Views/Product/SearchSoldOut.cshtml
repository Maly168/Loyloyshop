@{
    ViewData["Title"] = "Search Soldout Page";
}
@using LoyloyShop.Models

     @using (Html.BeginForm("SearchSoldOutProduct", "Product", FormMethod.Post,  new { @class="d-flex" }))
        {
                          
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <input type = "text" name="plateNumber" class = "form-control" placeholder="Search soldout by plat number">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                            <input type="submit" value="Search"  class="btn btn-primary"/>
                    </div>
                    </div>
        }
@if (Model.Products != null)
{
    <div class ="row">
         <table class="table-responsive table table-bordered">
        <thead>
          <tr>
            <th scope="col">Name</th>
            <th scope="col">Plate Number</th>
            <th scope="col">Price</th>
            <th scope="col">Fixing Price</th>
            <th scope="col">Sell Price</th>
            <th scope="col">Earning</th>
            <th scope="col">Created On</th>
            <th scope="col">Modified On</th>
            <th scope="col">Action</th>
          </tr>
        </thead>
        <tbody>
          @foreach (var prod in (List<Products>)Model.PaginatedProducts())
                {
                <tr class="">
                    <td>@prod.Name</td>
                    <td>@prod.PlateNumber</td>
                    <td>@prod.PriceBuy $</td>
                    <td>
                            @if (@prod.Detail.Count > 0)
                            {
                                @prod.Detail.Sum(d => d.Payment)
                            }
                    </td>
                    <td>@(prod.PriceSell) $</td>
                    <td>
                         @if (@prod.Detail.Count > 0)
                            {
                                @(prod.PriceSell - prod.PriceBuy - prod.Detail.Sum( d =>d.Payment ))
                            }else
                            {
                                @(prod.PriceSell - prod.PriceBuy)
                            }

                     $
                    </td>
                    <td>@prod.CreatedOn</td>
                    <td>@prod.ModifiedOn</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@prod.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@prod.Id">Details</a>
                    </td>
                  </tr> 
                }
                <tr>
                    <td colspan="7">Total Earning : @ViewBag.TotalEarning $</td>
                </tr>
        </tbody>
  </table>
    </div>
  <ul class="pagination">  
        @for (int i = 1; i <= Model.PageCount(); i++)  
        {  
            <li class="@(i == Model.CurrentPage ? "page-item active" : "page-item")">  
                <a class="page-link" href="@Url.Action("SearchSoldOut", new { page = i })">@i</a>  
            </li>  
        }  
    </ul>


}

